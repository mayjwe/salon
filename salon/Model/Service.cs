//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace salon.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Service
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Service()
        {
            this.ClientService = new HashSet<ClientService>();
            this.ServicePhoto = new HashSet<ServicePhoto>();
        }
    
        public int ID { get; set; }
        public string Title { get; set; }
        public decimal Cost { get; set; }
        public int DurationInSeconds { get; set; }
        public string Description { get; set; }
        public Nullable<double> Discount { get; set; }
        public string MainImagePath { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServicePhoto> ServicePhoto { get; set; }
        public string Background
        {
            get
            {
                if (this.Discount > 0)
                {
                    return "#7fff00";
                }
                return "#fff";
            }
        }

        public string CostWithDiscount
        {
            get
            {
                if (this.Discount > 0)
                {
                    var costWithDiscount = Convert.ToDouble(this.Cost) - Convert.ToDouble(this.Cost) * Convert.ToDouble(this.Discount / 100.00);
                    var cost = $"{this.Cost: ##}";
                    var costLineThrough = string.Concat(cost.Select(c => c + "\u0336"));
                    return $"{costLineThrough} {costWithDiscount: ##}";
                }
                return $"{this.Cost: ##}";
            }
        }

        public string DurationInMinutes
        {
            get
            {
                var durationInMinutes = Convert.ToDouble(this.DurationInSeconds) / 60;
                return $"{durationInMinutes: ##}";
            }
        }

        public string CostDuration
        {
            get
            {
                return $"{this.CostWithDiscount} рублей за {this.DurationInMinutes} минут";
            }
        }

        public string DiscountString
        {
            get
            {
                if (this.Discount > 0)
                {
                    return $"* скидка {this.Discount * 100: ##}%";
                }
                else
                {
                    return null;
                }
            }
        }

        public string ImgPath
        {
            get
            {
                if (!string.IsNullOrEmpty(this.MainImagePath))
                {
                    return $"/Услуги салона красоты/Images/{this.MainImagePath.Trim()}";
                }
                else
                {
                    return null;
                }
            }
        }
        public string ImgPathOrDefault
        {
            get
            {
                if (!string.IsNullOrEmpty(this.MainImagePath) && !string.IsNullOrEmpty(ImgPath))
                {
                    return ImgPath;
                }
                return "/Услуги салона красоты/Images/no_image.png";
            }
        }
    }
}